import a from "./lib/gcs.js";
import b from "./lib/toolkit.js";
class Clam {
  constructor(A = "GCS") {
    this.name = A;
    console.log(`make Clam instance mode is ${A}`);
    if (A == "GCS") this.module = new a(new b());
    else
      throw Error(
        "The second argument is invalid. You can set only 'GCS'. It means that you use Google Cloud Storage."
      );
  }
  setCred = (_) => {
    if (!_) throw Error("You must set the first argument.");
    if (_.clientId && _.redirectUrl && _.scope)
      try {
        this.module.setCred(_);
      } catch (B) {
        throw B;
      }
    else
      throw Error(
        "The first argument is invalid. You must set 'clientId', 'redirectUrl' and 'scope'."
      );
  };
  toAuthPage = () => {
    console.log("Auth");
    if (!this.module) throw Error("This instance is not initialzed.");
    this.module.oauthSignIn();
  };
  getAuthInfo = () => {
    console.log("Auth info + " + this.name);
    if (!this.module) throw Error("This instance is not initialzed.");
    if (this.name == "GCS") return this.module.getAccessToken(location);
  };
  uploadFiles = async (c, C, _c) => {
    console.log("Uplad");
    if (!this.module) throw Error("This instance is not initialzed.");
    return this.module.uploadFiles(c, C, _c);
  };
}
export default Clam;
